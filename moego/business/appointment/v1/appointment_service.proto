syntax = "proto3";

package moego.business.appointment.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/type/interval.proto";
import "moego/business/appointment/v1/appointment.proto";
import "moego/business/appointment/v1/pet_service_detail.proto";
import "moego/common/v1/pagination.proto";

option go_package = "github.com/MoeGolibrary/moegoapis/genproto/go/business/appointment/v1/appointmentpb;appointmentpb";
option java_multiple_files = true;
option java_outer_classname = "AppointmentServiceProto";
option java_package = "com.moego.api.business.appointment.v1";

// AppointmentService openapi definitions for operate appointments
service AppointmentService {
  // GetAppointment
  rpc GetAppointment(GetAppointmentRequest) returns (Appointment) {
    option (google.api.http) = {get: "/v1/appointments/{id}"};
  }
  // ListStaffs
  rpc ListAppointments(ListAppointmentsRequest) returns (ListAppointmentsResponse) {
    option (google.api.http) = {
      post: "/v1/appointments:list"
      body: "*"
    };
  }
  // CreateAppointment
  rpc CreateAppointment(CreateAppointmentRequest) returns (CreateAppointmentResponse) {
    option (google.api.http) = {
      post: "/v1/appointment"
      body: "*"
    };
  }
}

// GetAppointmentRequest get appointment request
message GetAppointmentRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  string business_id = 2 [(google.api.field_behavior) = REQUIRED];
}

message ListAppointmentsRequest {
  moego.common.v1.Pagination pagination = 1 [(google.api.field_behavior) = REQUIRED];
  string company_id = 2 [(google.api.field_behavior) = REQUIRED];
  repeated string business_ids = 3 [(google.api.field_behavior) = REQUIRED];
  message Filter {
    google.type.Interval start_time = 1 [(google.api.field_behavior) = OPTIONAL];
    google.type.Interval end_time = 2 [(google.api.field_behavior) = OPTIONAL];
    google.type.Interval last_updated_time = 3 [(google.api.field_behavior) = OPTIONAL];
    repeated Appointment.Status statuses = 4 [(google.api.field_behavior) = OPTIONAL];
  }
  Filter filter = 4;
}

message ListAppointmentsResponse {
  // The next page token
  string next_page_token = 1;
  // The Appointments
  repeated Appointment appointments = 2;
}

message CreateAppointmentRequest {
  // Account Info
  string business_id = 2 [(google.api.field_behavior) = REQUIRED];
  string customer_id = 4 [(google.api.field_behavior) = REQUIRED];

  // PetService info
  repeated PetService pet_services = 7 [(google.api.field_behavior) = REQUIRED];;
}

// for create appointment
message PetService {
  string pet_id = 1 [(google.api.field_behavior) = REQUIRED];
  repeated ServiceDetail service_details = 2 [(google.api.field_behavior) = REQUIRED];
}

message CreateAppointmentResponse {
  string appointment_id = 1;
}
