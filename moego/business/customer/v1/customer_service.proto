syntax = "proto3";

package moego.business.customer.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "moego/business/customer/v1/customer.proto";
import "moego/common/v1/address.proto";
import "moego/common/v1/pagination.proto";

option go_package = "github.com/MoeGolibrary/moegoapis/genproto/go/business/customer/v1/customerpb;customerpb";
option java_multiple_files = true;
option java_outer_classname = "CustomerServiceProto";
option java_package = "com.moego.api.business.customer.v1";

// CustomerService openapi definitions for operate customer
service CustomerService {
  // Create a customer
  rpc CreateCustomer(CreateCustomerRequest) returns (Customer) {
    option (google.api.http) = {
      post: "/v1/customers"
      body: "*"
    };
  }
  // Get a customer
  rpc GetCustomer(GetCustomerRequest) returns (Customer) {
    option (google.api.http) = {get: "/v1/customers/{id}"};
  }
  // List customers
  rpc ListCustomers(ListCustomersRequest) returns (ListCustomersResponse) {
    option (google.api.http) = {
      post: "/v1/customers:list"
      body: "*"
    };
  }
  // Generate a link to add customer card on file
  rpc GenCustomerCofLink(GenCustomerCofLinkRequest) returns (GenCustomerCofLinkResponse) {
    option (google.api.http) = {get: "/v1/customers/{id}/cof/link"};
  }
  // Append notes to a Customer
  rpc AppendCustomerNotes(AppendCustomerNotesRequest) returns (AppendCustomerNotesResponse) {
    option (google.api.http) = {
      post: "/v1/customers/{id}/notes"
      body: "*"
    };
  }
  // List Customer Notes
  rpc ListCustomerNotes(ListCustomerNotesRequest) returns (ListCustomerNotesResponse) {
    option (google.api.http) = {
      post: "/v1/customers/{id}/notes:list"
      body: "*"
    };
  }
  // Append tags to a Customer
  rpc AppendCustomerTags(AppendCustomerTagsRequest) returns (AppendCustomerTagsResponse) {
    option (google.api.http) = {
      post: "/v1/customers/{id}/tags"
      body: "*"
    };
  }
  // List Customer Tags
  rpc ListCustomerTags(ListCustomerTagsRequest) returns (ListCustomerTagsResponse) {
    option (google.api.http) = {
      post: "/v1/customers/{id}/tags:list"
      body: "*"
    };
  }
}

message CreateCustomerRequest {
  string company_id = 1 [(google.api.field_behavior) = REQUIRED];
  string preferred_business_id = 2 [(google.api.field_behavior) = REQUIRED];
  string first_name = 3 [(google.api.field_behavior) = REQUIRED];
  string last_name = 4 [(google.api.field_behavior) = REQUIRED];
  string phone = 5 [(google.api.field_behavior) = REQUIRED];
  string email = 6;
  moego.common.v1.Address address = 7;
  CustomerPreference preference = 8;
  repeated Customer.Tag tags = 9;
  repeated Customer.Note notes = 10;
}

message GetCustomerRequest {
  // The id of the customer to retrieve
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListCustomersRequest {
  // The pagination information
  moego.common.v1.Pagination pagination = 1 [(google.api.field_behavior) = REQUIRED];
  // The company id
  string company_id = 2 [(google.api.field_behavior) = REQUIRED];
}

message ListCustomersResponse {
  // next page token
  string next_page_token = 1;
  // customers belong to the company
  repeated Customer customers = 2;
}

message GenCustomerCofLinkRequest {
  // id of customer
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GenCustomerCofLinkResponse {
  // link of the customer cof
  string link = 1;
}

message AppendCustomerNotesRequest {
  // id of customer
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  // notes to append
  repeated Customer.Note notes = 3;
}

message AppendCustomerNotesResponse {
  // notes appended
  repeated Customer.Note notes = 1;
}

message ListCustomerNotesRequest {
  // pagination information
  moego.common.v1.Pagination pagination = 1 [(google.api.field_behavior) = REQUIRED];
  // id of customer
  string id = 2 [(google.api.field_behavior) = REQUIRED];
}

message ListCustomerNotesResponse {
  // next page token
  string next_page_token = 1;
  // notes of the customer
  repeated Customer.Note notes = 2;
}

message AppendCustomerTagsRequest {
  // id of customer
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  // tags to append
  repeated Customer.Tag tags = 3;
}

message AppendCustomerTagsResponse {
  // tags appended
  repeated Customer.Tag tags = 1;
}

message ListCustomerTagsRequest {
  // id of customer
  string id = 2 [(google.api.field_behavior) = REQUIRED];
}

message ListCustomerTagsResponse {
  // next page token
  repeated Customer.Tag tags = 2;
}
